"""Updated models.py

Revision ID: c0f60216660f
Revises: 368fba9edb32
Create Date: 2025-04-11 09:14:24.442853

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'c0f60216660f'
down_revision = '368fba9edb32'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('uk_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=80), nullable=False),
    sa.Column('county', sa.String(length=80), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('country', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('city', 'county', name='_city_county_uc')
    )
    op.create_table('search_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('searched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['uk_locations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('is_favorite', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['uk_locations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('search_records')
    op.drop_table('saved_locations')
    op.drop_table('search_records_locations')
    with op.batch_alter_table('weather_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('temperature_max', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('temperature_min', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('precipitation', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('wind_speed', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('wind_direction', sa.String(length=3), nullable=False))
        batch_op.add_column(sa.Column('humidity', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('visibility', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('pressure', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('last_updated', sa.DateTime(), nullable=True))
        batch_op.alter_column('weather_condition',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.create_unique_constraint('_location_date_uc', ['location_id', 'date'])
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'uk_locations', ['location_id'], ['id'])
        batch_op.drop_column('forecast_data')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('current_temperature')
        batch_op.drop_column('current_wind_speed')
        batch_op.drop_column('current_humidity')
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('weather_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('current_humidity', sa.FLOAT(), nullable=False))
        batch_op.add_column(sa.Column('current_wind_speed', sa.FLOAT(), nullable=False))
        batch_op.add_column(sa.Column('current_temperature', sa.FLOAT(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('forecast_data', sqlite.JSON(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'saved_locations', ['location_id'], ['id'])
        batch_op.drop_constraint('_location_date_uc', type_='unique')
        batch_op.alter_column('weather_condition',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('last_updated')
        batch_op.drop_column('pressure')
        batch_op.drop_column('visibility')
        batch_op.drop_column('humidity')
        batch_op.drop_column('wind_direction')
        batch_op.drop_column('wind_speed')
        batch_op.drop_column('precipitation')
        batch_op.drop_column('temperature_min')
        batch_op.drop_column('temperature_max')
        batch_op.drop_column('date')

    op.create_table('search_records_locations',
    sa.Column('search_record_id', sa.INTEGER(), nullable=False),
    sa.Column('saved_location_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['saved_location_id'], ['saved_locations.id'], ),
    sa.ForeignKeyConstraint(['search_record_id'], ['search_records.id'], ),
    sa.PrimaryKeyConstraint('search_record_id', 'saved_location_id')
    )
    op.create_table('saved_locations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('location_name', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('search_records',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('query', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user_locations')
    op.drop_table('search_history')
    op.drop_table('uk_locations')
    # ### end Alembic commands ###
